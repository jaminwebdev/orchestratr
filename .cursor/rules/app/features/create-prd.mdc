# Rule: Feature PRD Generation

## Goal

To guide an AI assistant in creating a focused, actionable Product Requirements Document (PRD) in Markdown format for a single new feature. This PRD will be added to an existing product and must align with all established project documentation.

The document's purpose is to clearly define the "what" and "why" of the new feature, providing enough detail for the `generate-tasks.mdc` rule to create a complete development plan. It serves as the single source of truth for this specific feature's scope and requirements.

## Process

1.  **Comprehensive Document Analysis (Dependencies):** The process MUST begin with a thorough analysis of the core documents in the `/docs/` folder to understand the existing product context. This includes reviewing the master `01_product_brief.md`, `04_design_guidelines.md`, and `05_technical_architecture.md`.
2.  **Conduct Structured Discovery:** Use the focused discovery framework below to gather all necessary information about the *specific feature*.
3.  **Synthesize and Generate:** Analyze all inputs to generate a concise but complete PRD using the `Document Structure` template provided.
4.  **Quality Assurance:** Use the `Quality Assurance Framework` to ensure the PRD is clear, unambiguous, and fully aligned with the existing product's standards.
5.  **Save and Version:** Save the final document in a new feature-specific directory, e.g., `/features/[feature-name]/[feature-name]_prd.md`.

## Discovery Framework

### 🎯 Feature Vision & Goal

  * **Problem Statement:** What specific user problem or unmet need does this feature solve?
  * **Proposed Solution:** In one or two sentences, how does this feature solve that problem?
  * **Strategic Alignment:** How does this feature support the overall product goals defined in `01_product_brief.md`?
  * **Success Metrics:** How will we measure the success of *this specific feature*? (e.g., Adoption rate, task completion time, user satisfaction score).

### 👥 User Experience & Flow

  * **Target Persona:** Which existing user persona(s) from `02_market_user_research.md` is this feature for?
  * **User Journey:** Describe the step-by-step user flow for this feature. Where does the user start? What actions do they take? What is the successful outcome?
  * **Entry Points:** Where in the existing application will the user access this new feature? (e.g., a new item in the main navigation, a button on the dashboard).

### 🛠️ Functional Requirements

  * **User Stories:** Let's define the specific user stories for this feature. For each, what is the format: "As a [persona], I want to [action] so that [benefit]."?
  * **Acceptance Criteria:** For each user story, what are the specific, testable conditions that must be met for it to be considered complete? (Use Gherkin-style: `Given/When/Then`).
  * **Edge Cases & Error Handling:** What happens on the "unhappy path"? What if the user enters invalid data, loses connection, or lacks permissions? What error messages should be shown?
  * **Out of Scope:** What specific functionalities are we explicitly *not* building for this feature's initial release?

### ⚙️ Technical & Design Considerations

  * **Design Alignment:** How will this feature use the components and styles already defined in `04_design_guidelines.md`? Are any new components required?
  * **Architecture Integration:** How does this feature fit into the existing system defined in `05_technical_architecture.md`? Will it use existing API endpoints and database tables, or are new ones needed?
  * **Third-Party Dependencies:** Does this feature require any new third-party services or APIs?

## Document Structure (PRD Template)

````markdown
# PRD: [Feature Name]

_Version: 1.0_
_Date: [Date]_
_Author(s): [Name(s)]_
_Status: Draft | In Review | Approved_

---

## 1. Feature Overview
- **Problem:** A clear and concise description of the user problem this feature solves.
- **Solution:** A high-level summary of how the feature addresses the problem.
- **Strategic Goal:** How this feature contributes to the main product's objectives.

## 2. Target Audience & User Journey
- **Primary Persona(s):** [Name of Persona], as defined in `02_market_user_research.md`.
- **User Flow:** A step-by-step description of how the user interacts with the feature.
- **User Flow Diagram:**
    ```mermaid
    graph TD
        A[User is on Dashboard] --> B{Clicks 'Create New Report'};
        B --> C[Fills out Report Name];
        C --> D[Selects Data Range];
        D --> E{Clicks 'Generate'};
        E --> F[Views Generated Report];
    ```

## 3. Functional Requirements
This section details the specific user stories and acceptance criteria.

### Story 1: [User Story Title]
* **User Story:** "As a [Persona], I want to [Action], so that [Benefit]."
* **Acceptance Criteria:**
    * `Given` [Context], `When` [Action], `Then` [Outcome].
    * `Given` [Another Context], `When` [Action], `Then` [Another Outcome].
* **UI/UX Notes:** [Brief notes on required UI elements, referencing the design system].

### Story 2: [User Story Title]
* [Repeat structure...]

## 4. Technical & Design Requirements
- **Design:** This feature must adhere to all guidelines in `04_design_guidelines.md`. No new colors or fonts should be introduced.
- **Architecture:** This feature will be implemented by extending the existing `[Module/Service Name]` as defined in `05_technical_architecture.md`.
- **New Endpoints (if any):**
    - `POST /api/v1/new-feature`
- **Database Changes (if any):**
    - A new `new_feature_data` table will be added.

## 5. Success Metrics
- **Primary Metric:** [e.g., Feature Adoption Rate: % of MAU who use this feature at least once a week].
- **Secondary Metric:** [e.g., Task Success Rate: % of users who successfully complete the user flow].
- **Measurement Tool:** [e.g., Mixpanel].

## 6. Out of Scope
- [Functionality A, e.g., "Exporting the report to PDF."]
- [Functionality B, e.g., "Sharing the report with other users."]
````

## Quality Assurance Framework

  - [ ] Does the **Problem Statement** clearly articulate a valid user need?
  - [ ] Is every **User Story** accompanied by clear, testable **Acceptance Criteria**?
  - [ ] Does the PRD explicitly reference and align with the core project documents (`01`, `02`, `04`, `05`)?
  - [ ] Are the **Success Metrics** specific, measurable, and directly related to the feature's goal?
  - [ ] Is the **Out of Scope** section clear to prevent scope creep during development?

## Integration with Other Documentation

  * **As a Source:** This PRD is the primary input for the `generate-tasks.mdc` rule, which will convert the user stories and requirements into an actionable development plan.
  * **Dependencies:** This document is not valid unless it is created in the context of the master documents in the `/docs/` directory. It **must** reference:
      * `01_product_brief.md` (for strategic alignment)
      * `02_market_user_research.md` (for personas)
      * `04_design_guidelines.md` (for UI/UX consistency)
      * `05_technical_architecture.md` (for implementation context)

## Best Practices

1.  **Focus on One Feature:** Keep the PRD tightly scoped to a single, well-defined feature.
2.  **Reference, Don't Repeat:** Link to the core documents for personas, design rules, etc., instead of duplicating information. This keeps the PRD lean and ensures it stays in sync.
3.  **Clarity Over Comprehensiveness:** The goal is an unambiguous definition of the feature, not an exhaustive document.

## Output Requirements

  - **Format:** Markdown (`.md`) with Mermaid.js for diagrams.
  - **Location:** `/features/[feature-name]/`
  - **Filename:** `[feature-name]_prd.md`
  - **Audience:** Product Managers, Engineers, and Designers working on this specific feature.

## Final Instructions

1.  **DO NOT** invent new design patterns or architectural principles. This PRD must conform to the established system.
2.  **DO** ensure every requirement is justified by a user story that solves the stated problem.
3.  **DO** use the exact Markdown structure provided to ensure consistency across all feature PRDs.

## Key Success Factors

1.  **Alignment:** The feature clearly fits within and supports the existing product strategy, design, and architecture.
2.  **Clarity:** A developer can read the PRD and understand exactly what to build and why, with no ambiguity.
3.  **Efficiency:** The focused nature of the document allows for rapid and efficient feature planning and execution.